#
# Genesis block seeding all nodes
#
# Note that .config.chainId should match the --networkid argument in geth
# This solves an issue with metamask + sending transaction erroring out
#
# To clear everything and start from a different genesis, simply edit the
# genesis info and delete all pods (since storage is ephemeral)

apiVersion: v1
kind: ConfigMap
metadata:
  name: genesis
  namespace: eth
data:
  genesis.json: |
    {
        "config": {
            "chainId": 15,
            "homesteadBlock": 0,
            "eip155Block": 0,
            "eip158Block": 0
        },
        "difficulty": "2",
        "gasLimit": "2100000",
        "alloc": {
            "0xC2cd2e6D5C18f375D7A730bd14CF1946F8d2793F": { "balance": "1000000000000000000000000000000" },
            "1100000000000000000000000000000000000000": { "balance": "0" }
        }
    }

---

#
# Bootnode nodes
#

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: geth-boot
  name: geth-boot
  namespace: eth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geth-boot
  template:
    metadata:
      labels:
        app: geth-boot
    spec:
      containers:
      - image: ethereum/client-go:alltools-latest
        name: boot
        command: ["/bin/sh", "-c"]
        args:
        - |
          test -f /shared/boot.key || bootnode -genkey=/shared/boot.key
          bootnode -nodekey=/shared/boot.key -writeaddress | tee /shared/bootnode-address
          bootnode -nodekey=/shared/boot.key

        ports:
        - containerPort: 30301
          name: boot
          protocol: UDP

        volumeMounts:
        - name: shared
          mountPath: /shared

      volumes:
      - name: shared
        hostPath:
          path: "/home/blk/play/eth-network/shared-kube"
          type: DirectoryOrCreate

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: geth-boot
  name: geth-boot
  selfLink: /api/v1/namespaces/eth/services/geth-boot
spec:
  ports:
  - name: boot
    port: 30301
    protocol: UDP
    targetPort: 30301
  selector:
    app: geth-boot
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---

# Non-mining nodes

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: geth
    tier: nodes
  name: geth
  namespace: eth
spec:
  replicas: 3
  selector:
    matchLabels:
      app: geth
      tier: nodes
  template:
    metadata:
      labels:
        app: geth
        tier: nodes
    spec:
      initContainers:
      - image: ethereum/client-go
        imagePullPolicy: IfNotPresent
        name: init
        args:
        - init
        - --datadir=/eth/db
        - /eth/genesis/genesis.json
        volumeMounts:
        - name: genesis
          mountPath: "/eth/genesis"
        - name: db
          mountPath: "/eth/db"
      containers:
      - image: ethereum/client-go
        imagePullPolicy: IfNotPresent
        name: geth
        command: ["/bin/sh", "-c"]
        args:
        - |
            BOOTNODE_ADDRESS=$(cat /shared/bootnode-address)
            BOOTNODE_IP=$(getent hosts geth-boot | awk '{print $1}')
            geth --datadir=/eth/db \
                 --bootnodes=enode://$BOOTNODE_ADDRESS@$BOOTNODE_IP:30301 \
                 --rpc --rpcvhosts="*" --rpcapi admin,eth,web3,net,debug --v5disc --rpcaddr=0.0.0.0 \
                 --networkid 15
        ports:
        - containerPort: 30303
          name: eth
          protocol: TCP
        - containerPort: 8545
          name: http
          protocol: TCP
        - containerPort: 8546
          name: ws
          protocol: TCP
        volumeMounts:
        - name: shared
          mountPath: /shared
        - name: db
          mountPath: "/eth/db"
      volumes:
        - name: genesis
          configMap:
            name: genesis
        - name: db
          emptyDir: {}
        - name: shared
          hostPath:
            path: "/home/blk/play/eth-network/shared-kube"
            type: DirectoryOrCreate

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: geth-nodes
  name: geth-nodes
spec:
  ports:
  - name: http
    port: 8545
    protocol: TCP
  selector:
    app: geth
    tier: nodes
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---

# Mining nodes

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: geth
    tier: miners
  name: geth-miner
  namespace: eth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geth
      tier: miners
  template:
    metadata:
      labels:
        app: geth
        tier: miners
    spec:
      initContainers:
      - image: ethereum/client-go
        imagePullPolicy: IfNotPresent
        name: init
        args:
        - init
        - --datadir=/eth/db
        - /eth/genesis/genesis.json
        volumeMounts:
        - name: genesis
          mountPath: "/eth/genesis"
        - name: db
          mountPath: "/eth/db"
      containers:
      - image: ethereum/client-go
        imagePullPolicy: IfNotPresent
        name: geth
        command: ["/bin/sh", "-c"]
        args:
        - |
            BOOTNODE_ADDRESS=$(cat /shared/bootnode-address)
            BOOTNODE_IP=$(getent hosts geth-boot | awk '{print $1}')
            geth --datadir=/eth/db \
                 --bootnodes=enode://$BOOTNODE_ADDRESS@$BOOTNODE_IP:30301 \
                 --rpc --rpcvhosts="*" --rpcapi admin,eth,web3,net,debug --v5disc --rpcaddr=0.0.0.0 \
                 --mine --minerthreads=1 --extradata=$(hostname) --etherbase "1100000000000000000000000000000000000000" \
                 --networkid 15
        resources:
          limits:
            cpu: "1000m"
        ports:
        - containerPort: 30303
          name: eth
          protocol: TCP
        - containerPort: 8545
          name: http
          protocol: TCP
        - containerPort: 8546
          name: ws
          protocol: TCP
        volumeMounts:
        - name: shared
          mountPath: /shared
        - name: db
          mountPath: "/eth/db"
      volumes:
        - name: genesis
          configMap:
            name: genesis
        - name: db
          emptyDir: {}
        - name: shared
          hostPath:
            path: "/home/blk/play/eth-network/shared-kube"
            type: DirectoryOrCreate


